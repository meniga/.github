name: Container CI

env:
  # Path to AssemblyInfo file that should be updated with GitVersion
  # Example: ./src/Meniga.Sample.Service/Properties/AssemblyInfo.cs
  ASSEMBLY_INFO_FILE_PATH: <path-to-assembly-info-file>
  # Example: sample-service
  SERVICE_NAME: <service-name>
  # Where to push the container image
  CONTAINER_REGISTRY: menigaacr.azurecr.io
  # Where to consume NuGet packages
  NUGET_URL: https://nuget.pkg.github.com/meniga/index.json

on:
  push:
    branches: ['**']
    tags: ['*']
    paths-ignore:
    - '.github/**'
    - '!.github/workflows/container-ci.yml'
    - 'docs/**'
    - '*.md'

  workflow_dispatch:
    inputs:
      skipContainerLinting:
        description: 'Skip step that lints the container for best practices'
        required: false
        default: 'false'
      skipImageScanning:
        description: 'Skip steps that scan the container image for vulnerabilities'
        required: false
        default: 'false'

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      ## Create short sha
      SHA8: ${GITHUB_SHA::8}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.5.x'

    - name: Update AssemblyInfo
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        updateAssemblyInfo: true
        updateAssemblyInfoFilename: ${{ env.ASSEMBLY_INFO_FILE_PATH }}

    - name: Set image tag
      run: |
        imageTag="${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${GITHUB_REF##*/}-${{ env.SHA8 }}"

        if [[ $GITHUB_REF != refs/tags/* ]]; then
          imageTag+="-$(date +%F.%H%M%S)"
        fi

        echo "IMAGE_TAG=$imageTag" >> $GITHUB_ENV

    - name: Docker build
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build \
        --build-arg "NUGET_URL=${{ env.NUGET_URL }}" \
        --build-arg "NUGET_USERNAME=${{ secrets.MENIGA_NUGET_USERNAME }}" \
        --build-arg "NUGET_PASSWORD=${{ secrets.MENIGA_NUGET_PASSWORD }}" \
        --tag ${{ env.IMAGE_TAG }} \
        ./src

    - if: github.event.inputs.skipImageScanning != 'true'
      name: Run vulnerability scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_TAG }}
        format: table
        exit-code: 1
        ignore-unfixed: true

    - if: github.event.inputs.skipContainerLinting != 'true'
      name: Lint container for best practices using Dockle
      uses: docker://goodwithtech/dockle:v0.3.1
      with:
        args: --exit-code 0 ${{ env.IMAGE_TAG }}

    - name: Docker login
      if: |
        startsWith(github.ref, 'refs/tags')
        || endsWith(github.ref, '/master')
        || endsWith(github.ref, '/develop')
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.MENIGA_CR_USERNAME }}
        password: ${{ secrets.MENIGA_CR_PASSWORD }}

    - name: Docker push
      if: |
        startsWith(github.ref, 'refs/tags')
        || endsWith(github.ref, '/master')
        || endsWith(github.ref, '/develop')
      run: |
        docker push ${{ env.IMAGE_TAG }}
